#!/bin/bash


# Check if BWHC_BASE_DIR is already set
if [ -z ${BWHC_BASE_DIR+x} ]; then
  # assume we are in the correct working directory
  source ./config
else
  source $BWHC_BASE_DIR/config
fi



###############################################################################
###############################################################################

BWHC_APP_DIR="$BWHC_BASE_DIR/BWHCAPPPLACEHOLDER"


case "$1" in

  'start')

    if [ -f "$PID_FILE" ]; then

      PID=$(cat $PID_FILE)
      echo "-------------------------------------------------------------------------"
      echo " bwHealthCloud Backend Service seems to run already on PID" $(cat $PID_FILE)
      echo "   "
      echo " Else delete obsolete RUNNING_PID file"
      echo "-------------------------------------------------------------------------"

      exit 1

    else

      if [ "$ZPM_SITE" = "TODO" ]; then
        echo "ERROR: Configure variable ZPM_SITE correctly!"
        exit 1
      fi 

      if [ "$BWHC_DATA_ENTRY_DIR" = "TODO" ]; then
        echo "ERROR: Configure variable BWHC_DATA_ENTRY_DIR correctly!"
        exit 1
      fi 

      if [ "$BWHC_QUERY_DATA_DIR" = "TODO" ]; then
        echo "ERROR: Configure variable BWHC_QUERY_DATA_DIR correctly!"
        exit 1
      fi 

      if [ "$BWHC_USER_DB_DIR" = "TODO" ]; then
        echo "ERROR: Configure variable BWHC_USER_DB_DIR correctly!"
        exit 1
      fi 



      echo "-------------------------------------------------------------------------"
      echo " Starting bwHealthCloud Backend Service" $ZPM_SITE
      echo "-------------------------------------------------------------------------"


      N_RANDOM_FILES=50    
      -Dbwhc.query.data.generate=$N_RANDOM_FILES \
 
 
      if [ -n "$N_RANDOM_FILES" ] && (( $N_RANDOM_FILES > 2000 )); then
        echo "ERROR: Random data generation utility is for TESTING purposes only! Reduce N_RANDOM_FILES"
        exit 1
      fi 

      $BWHC_APP_DIR/bin/bwhc-rest-api-gateway \
        -Dconfig.file=$BWHC_BASE_DIR/production.conf \
        -Dlogger.file=$BWHC_BASE_DIR/logback.xml \
        -Dpidfile.path=$PID_FILE \
        -Dbwhc.zpm.site="$ZPM_SITE" \
        -Dbwhc.data.entry.dir=$BWHC_DATA_ENTRY_DIR \
        -Dbwhc.query.data.dir=$BWHC_QUERY_DATA_DIR \
        -Dbwhc.user.data.dir=$BWHC_USER_DB_DIR \
        -Dbwhc.hgnc.dir=$BWHC_HGNC_DIR \
        -Dbwhc.connector.configFile=$BWHC_CONNECTOR_CONFIG &
      
      sleep 1s
     
      echo "-------------------------------------------------------------------------"
      echo " bwHealthCloud Backend Service up and running on PID" $(cat $PID_FILE)
      echo "-------------------------------------------------------------------------"
    fi
  ;;
 
  'stop')

    if [ -f "$PID_FILE" ]; then

      PID=$(cat $PID_FILE)
  
      echo "-------------------------------------------------------------------------"
      echo " Shutting down bwHealthCloud Backend Service" $ZPM_SITE
      echo "-------------------------------------------------------------------------"
  
      echo "-------------------------------------------------------------------------"
      echo " Killing process PID:" $PID
      echo "-------------------------------------------------------------------------"
  
      kill $PID

    else
      echo "-------------------------------------------------------------------------"
      echo " No PID to indicate that bwHealthCloud Backend Service is running"
      echo "-------------------------------------------------------------------------"
    fi

  ;;


  *)
     echo 'Arguments must be one of { start | stop }'
     exit 1
  ;;


esac
